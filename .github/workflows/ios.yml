on:
  workflow_dispatch:
  workflow_call: 
    secrets:
      SONAR_TOKEN:
        description: 'Token for SonarQube authentication'
        required: true
    inputs:
      SONAR_DOMAIN_NAME:
          description: 'Domain name of the SonarQube server'
          required: true
          type: string
      FETCH_DEPTH:
          required: false
          default: 0
          type: number
      GIT_LFS_PATH:
        required: false
        default: "/opt/homebrew/bin:/usr/local/bin:/usr/bin:/bin"
        type: string    

name: Scan project with SonarQube scanner
jobs:
  sonar-scan:
    runs-on: self-hosted
    env:
      GIT_LFS_PATH: ${{ inputs.GIT_LFS_PATH }}
    steps:  
    - name: Configure environment
      run: |
        echo "${GIT_LFS_PATH}" >> $GITHUB_PATH
    - name: Set up Git LFS
      run: |
        # Install git-lfs
        /opt/homebrew/bin/git-lfs install
    - uses: actions/checkout@v4
      with:
        fetch-depth: ${{ inputs.FETCH_DEPTH }}
        lfs: true
    - name: Generate sonar project name
      run: |
        printf "\nsonar.projectKey = ${{ github.repository_owner }}-${{ github.event.repository.name }}-${{ github.head_ref || github.ref_name }}" | sed s/'\/'/'-'/g >> sonar-project.properties
    - name: SonarQube Scan
      run: |
        export PATH=$PATH:~/.local/bin
        sonar-scanner -Dhttp.proxyPort=3129 -Dhttps.proxyPort=3129 -Dhttp.proxyHost=${{ inputs.SONAR_DOMAIN_NAME }} \
          -Dhttps.proxyHost=${{ inputs.SONAR_DOMAIN_NAME }} # -Dsonar.qualitygate.wait=true
      env:
        HTTP_PROXY: https://${{ inputs.SONAR_DOMAIN_NAME }}:3129
        HTTPS_PROXY: https://${{ inputs.SONAR_DOMAIN_NAME }}:3129
        NO_PROXY: localhost,127.0.0.1
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: https://${{ inputs.SONAR_DOMAIN_NAME }}