on:
  workflow_call: 
    secrets:
      SONAR_TOKEN:
        description: 'Token for SonarQube authentication'
        required: true
    inputs:
      SONAR_DOMAIN_NAME:
          description: 'Domain name of the SonarQube server'
          required: true
          type: string
      FETCH_DEPTH:
          required: false
          default: 0
          type: number
      RUN_PRECOMMIT:
          description: 'Flag to determine if precommit should run'
          required: false
          default: true
          type: boolean
      RUN_CFN_LINT:
          description: 'Flag to determine if cfnlint should run'
          required: false
          default: true
          type: boolean
      RUN_TF_LINT:
          description: 'Flag to determine if tflint should run'
          required: false
          default: true
          type: boolean

name: Scan project with SonarQube scanner
jobs:
  run-pre-commit:
    if: ${{ inputs.RUN_PRECOMMIT }}
    name: Run pre-commit checks
    runs-on: ubuntu-24.04
    container:
      image: ghcr.io/antonbabenko/pre-commit-terraform:latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: ${{ inputs.FETCH_DEPTH }}  
          
    
    - name: Configure Git Safe Directory
      run: git config --global --add safe.directory /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}
    
    - name: Verify Git Repository
      run: git status

    - name: Run Pre-Commit Hooks
      run: pre-commit run -a
  run-sonar-checks:
    name: Run sonar checks
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'  
    
    - name: Setup cfn-lint
      if: ${{ inputs.RUN_CFN_LINT }}
      run: |
        pip install cfn-lint pydot
        
    - name: Apply cfn-lint
      if: ${{ inputs.RUN_CFN_LINT }}
      run: |
        cfn-lint -f json --output-file cfnlint.json *.cfn || true
    
    - uses: terraform-linters/setup-tflint@v4
      name: Setup TFLint
      if: ${{ inputs.RUN_TF_LINT }}
      with:
        tflint_version: v0.52.0
  
    - name: Apply tflint
      if: ${{ inputs.RUN_TF_LINT }}
      run: |
        tflint --recursive -f json > tflint.json || true
    
    - name: Generate sonar project name
      run: |
        printf "\nsonar.projectKey = ${{ github.repository_owner }}-${{ github.event.repository.name }}-${{ github.head_ref || github.ref_name }}" | sed s/'\/'/'-'/g >> sonar-project.properties
    
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@v4.2.1
      with:
        args: >
          -Dhttp.proxyPort=3129
          -Dhttps.proxyPort=3129
          -Dhttp.proxyHost=${{ inputs.SONAR_DOMAIN_NAME }}
          -Dhttps.proxyHost=${{ inputs.SONAR_DOMAIN_NAME }}
      env:
        HTTP_PROXY: https://${{ inputs.SONAR_DOMAIN_NAME }}:3129
        HTTPS_PROXY: https://${{ inputs.SONAR_DOMAIN_NAME }}:3129
        NO_PROXY: localhost,127.0.0.1
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: https://${{ inputs.SONAR_DOMAIN_NAME }}
    
    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      continue-on-error: true
      uses: sonarsource/sonarqube-quality-gate-action@v1.1.0
      timeout-minutes: 5
      env:
       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
       SONAR_HOST_URL: https://${{ inputs.SONAR_DOMAIN_NAME }}

    - name: Get detailed SonarQube issues
      if: steps.sonarqube-quality-gate-check.outcome == 'failure'
      continue-on-error: false 
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        PROJECT_KEY=$(echo "${{ github.repository_owner }}-${{ github.event.repository.name }}-${{ github.head_ref || github.ref_name }}" | sed 's/\//-/g')
        curl -s -u $SONAR_TOKEN: "https://${{ vars.SONAR_DOMAIN_NAME }}/api/issues/search?componentKeys=${PROJECT_KEY}&resolved=no&ps=500" > sonar_issues.json
        echo "### Detailed SonarQube Issues" >> $GITHUB_STEP_SUMMARY
        echo "File | Line | Error type | Description" >> $GITHUB_STEP_SUMMARY
        echo "--- | --- | --- | ---" >> $GITHUB_STEP_SUMMARY
        jq -r '.issues[] | "\(.component) | \(.line) | \(.severity) | \(.message)"' sonar_issues.json | tee sonar_issues_summary.txt | tee -a $GITHUB_STEP_SUMMARY
      
        echo "Detailed issues summary:"
        cat sonar_issues_summary.txt
        exit 1